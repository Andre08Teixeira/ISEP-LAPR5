// <auto-generated />
using DDDSample1.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DDDNetCore.Migrations
{
    [DbContext(typeof(DDDSample1DbContext))]
    [Migration("20221220191623_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DDDSample1.Domain.Deliveries.Delivery", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("deliverywarehouseID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("DDDSample1.Domain.Warehouse.WareHouse", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("DDDSample1.Domain.Deliveries.Delivery", b =>
                {
                    b.OwnsOne("DDDSample1.Domain.Deliveries.Date", "delivery_date", b1 =>
                        {
                            b1.Property<string>("DeliveryId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("dia")
                                .HasColumnType("int");

                            b1.Property<int>("month")
                                .HasColumnType("int");

                            b1.Property<int>("year")
                                .HasColumnType("int");

                            b1.HasKey("DeliveryId");

                            b1.ToTable("Deliveries");

                            b1.WithOwner()
                                .HasForeignKey("DeliveryId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Deliveries.PutTruckTime", "put_truck_time", b1 =>
                        {
                            b1.Property<string>("DeliveryId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("mins")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("time")
                                .HasColumnType("int");

                            b1.HasKey("DeliveryId");

                            b1.ToTable("Deliveries");

                            b1.WithOwner()
                                .HasForeignKey("DeliveryId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Deliveries.RemoveTruckTime", "remove_Truck_time", b1 =>
                        {
                            b1.Property<string>("DeliveryId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("mins")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("time")
                                .HasColumnType("int");

                            b1.HasKey("DeliveryId");

                            b1.ToTable("Deliveries");

                            b1.WithOwner()
                                .HasForeignKey("DeliveryId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Deliveries.Weight", "weight", b1 =>
                        {
                            b1.Property<string>("DeliveryId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("kg")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double>("weight")
                                .HasColumnType("float");

                            b1.HasKey("DeliveryId");

                            b1.ToTable("Deliveries");

                            b1.WithOwner()
                                .HasForeignKey("DeliveryId");
                        });

                    b.Navigation("delivery_date");

                    b.Navigation("put_truck_time");

                    b.Navigation("remove_Truck_time");

                    b.Navigation("weight");
                });

            modelBuilder.Entity("DDDSample1.Domain.Warehouse.WareHouse", b =>
                {
                    b.OwnsOne("DDDSample1.Domain.Warehouse.Address", "adress", b1 =>
                        {
                            b1.Property<string>("WareHouseId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("codigoPostal")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("country")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("street")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("WareHouseId");

                            b1.ToTable("Warehouses");

                            b1.WithOwner()
                                .HasForeignKey("WareHouseId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Warehouse.Coordinates", "coordinates", b1 =>
                        {
                            b1.Property<string>("WareHouseId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<float>("altitude")
                                .HasColumnType("real");

                            b1.Property<float>("latitude")
                                .HasColumnType("real");

                            b1.Property<float>("longitude")
                                .HasColumnType("real");

                            b1.HasKey("WareHouseId");

                            b1.ToTable("Warehouses");

                            b1.WithOwner()
                                .HasForeignKey("WareHouseId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Warehouse.Designation", "designation", b1 =>
                        {
                            b1.Property<string>("WareHouseId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("designation")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("WareHouseId");

                            b1.ToTable("Warehouses");

                            b1.WithOwner()
                                .HasForeignKey("WareHouseId");
                        });

                    b.Navigation("adress");

                    b.Navigation("coordinates");

                    b.Navigation("designation");
                });
#pragma warning restore 612, 618
        }
    }
}
